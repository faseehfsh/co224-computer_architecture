$date
	Wed Jun 28 10:42:24 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module cpu_tb $end
$var wire 1 ! WRITE $end
$var wire 1 " READ $end
$var wire 32 # PC [31:0] $end
$var wire 32 $ MEM_WRITEDATA [31:0] $end
$var wire 1 % MEM_WRITE $end
$var wire 32 & MEM_READDATA [31:0] $end
$var wire 1 ' MEM_READ $end
$var wire 1 ( MEM_BUSYWAIT $end
$var wire 6 ) MEM_ADDRESS [5:0] $end
$var wire 8 * CPU_WRITEDATA [7:0] $end
$var wire 8 + CPU_READDATA [7:0] $end
$var wire 1 , BUSYWAIT $end
$var wire 8 - ADDRESS [7:0] $end
$var reg 1 . CLK $end
$var reg 32 / INSTRUCTION [31:0] $end
$var reg 1 0 RESET $end
$scope module mycpu $end
$var wire 8 1 ADDRESS [7:0] $end
$var wire 1 . CLK $end
$var wire 32 2 INSTRUCTION [31:0] $end
$var wire 1 0 RESET $end
$var wire 8 3 WRITEDATA [7:0] $end
$var wire 1 4 ZERO $end
$var wire 8 5 RESULT [7:0] $end
$var wire 8 6 REGWRITEDATA [7:0] $end
$var wire 8 7 READDATA [7:0] $end
$var wire 32 8 PCPLUSFOUR [31:0] $end
$var wire 32 9 PCJUMP [31:0] $end
$var wire 8 : OPERAND2 [7:0] $end
$var wire 8 ; OPERAND1 [7:0] $end
$var wire 32 < NEXTPC [31:0] $end
$var wire 8 = MUX2OUT [7:0] $end
$var wire 8 > MUX1OUT [7:0] $end
$var wire 32 ? FINALJUMPCOUNT [31:0] $end
$var wire 32 @ EXTENDEDJUMPCOUNT [31:0] $end
$var wire 1 , BUSYWAIT $end
$var reg 3 A ALU_SELECT [2:0] $end
$var reg 3 B DESTINATIONADDRESS [2:0] $end
$var reg 8 C IMMEDIATE [7:0] $end
$var reg 8 D JUMPCOUNT [7:0] $end
$var reg 8 E OPCODE [7:0] $end
$var reg 32 F PC [31:0] $end
$var reg 1 " READ_D $end
$var reg 3 G SOURCE1ADDRESS [2:0] $end
$var reg 3 H SOURCE2ADDRESS [2:0] $end
$var reg 1 I WRITE $end
$var reg 1 ! WRITE_D $end
$var reg 1 J isBEQ $end
$var reg 1 K isBNE $end
$var reg 1 L isIMMEDIATE $end
$var reg 1 M isJUMP $end
$var reg 1 N isRIGHTSHIFT $end
$var reg 1 O isSUBSTRACT $end
$var reg 8 P twosComplement [7:0] $end
$scope module ALU $end
$var wire 3 Q SELECT [2:0] $end
$var wire 1 N SHIFTINDICATOR $end
$var wire 8 R Rotate [7:0] $end
$var wire 8 S Or [7:0] $end
$var wire 8 T LogicalShift [7:0] $end
$var wire 8 U Fwd [7:0] $end
$var wire 8 V DATA2 [7:0] $end
$var wire 8 W DATA1 [7:0] $end
$var wire 8 X ArithmeticShift [7:0] $end
$var wire 8 Y And [7:0] $end
$var wire 8 Z Add [7:0] $end
$var reg 8 [ RESULT [7:0] $end
$var reg 1 4 ZERO $end
$var reg 1 \ zero_flag $end
$scope module Add_ $end
$var wire 8 ] DATA2 [7:0] $end
$var wire 8 ^ DATA1 [7:0] $end
$var reg 8 _ RESULT [7:0] $end
$upscope $end
$scope module And_ $end
$var wire 8 ` DATA2 [7:0] $end
$var wire 8 a DATA1 [7:0] $end
$var reg 8 b RESULT [7:0] $end
$upscope $end
$scope module ArithmeticShift_ $end
$var wire 8 c SHIFTAMOUNT [7:0] $end
$var wire 8 d OPERAND [7:0] $end
$var reg 8 e RESULT [7:0] $end
$var reg 7 f temp [6:0] $end
$var reg 8 g tempOperand [7:0] $end
$var integer 32 h j [31:0] $end
$upscope $end
$scope module Forward_ $end
$var wire 8 i DATA2 [7:0] $end
$var reg 8 j RESULT [7:0] $end
$upscope $end
$scope module LogicalShift_ $end
$var wire 1 N SHIFTSIDE $end
$var wire 8 k SHIFTAMOUNT [7:0] $end
$var wire 8 l OPERAND [7:0] $end
$var reg 8 m RESULT [7:0] $end
$var reg 7 n temp [6:0] $end
$var reg 8 o tempOperand [7:0] $end
$var integer 32 p i [31:0] $end
$upscope $end
$scope module Or_ $end
$var wire 8 q DATA2 [7:0] $end
$var wire 8 r DATA1 [7:0] $end
$var reg 8 s RESULT [7:0] $end
$upscope $end
$scope module Rotate_ $end
$var wire 8 t ROTATEAMOUNT [7:0] $end
$var wire 8 u OPERAND [7:0] $end
$var reg 8 v RESULT [7:0] $end
$var reg 7 w temp [6:0] $end
$var reg 1 x tempLSB $end
$var reg 8 y tempOperand [7:0] $end
$var integer 32 z k [31:0] $end
$upscope $end
$upscope $end
$scope module EXTENDOFFSET $end
$var wire 8 { OFFSET [7:0] $end
$var reg 32 | EXTENDEDOFFSET [31:0] $end
$upscope $end
$scope module JUMPTO $end
$var wire 32 } TARGETPC [31:0] $end
$var wire 32 ~ JUMPBY [31:0] $end
$var wire 32 !" CURRENTPC [31:0] $end
$upscope $end
$scope module MUX1 $end
$var wire 8 "" DATA1 [7:0] $end
$var wire 1 O SELECT $end
$var wire 8 #" DATA2 [7:0] $end
$var reg 8 $" OUTPUT [7:0] $end
$upscope $end
$scope module MUX2 $end
$var wire 8 %" DATA1 [7:0] $end
$var wire 8 &" DATA2 [7:0] $end
$var wire 1 L SELECT $end
$var reg 8 '" OUTPUT [7:0] $end
$upscope $end
$scope module MUX3 $end
$var wire 1 J BEQSELECT $end
$var wire 1 K BNESELECT $end
$var wire 32 (" DATA1 [31:0] $end
$var wire 1 M JUMPSELECT $end
$var wire 1 4 ZEROSELECT $end
$var wire 32 )" DATA2 [31:0] $end
$var reg 32 *" OUTPUT [31:0] $end
$upscope $end
$scope module MUX4 $end
$var wire 8 +" DATA2 [7:0] $end
$var wire 1 " SELECT $end
$var wire 8 ," DATA1 [7:0] $end
$var reg 8 -" OUTPUT [7:0] $end
$upscope $end
$scope module NEXTPCVAl $end
$var wire 32 ." IN [31:0] $end
$var reg 32 /" OUT [31:0] $end
$upscope $end
$scope module REGISTER $end
$var wire 1 . CLK $end
$var wire 8 0" IN [7:0] $end
$var wire 3 1" INADDRESS [2:0] $end
$var wire 8 2" OUT1 [7:0] $end
$var wire 3 3" OUT1ADDRESS [2:0] $end
$var wire 8 4" OUT2 [7:0] $end
$var wire 3 5" OUT2ADDRESS [2:0] $end
$var wire 1 0 RESET $end
$var wire 1 I WRITE $end
$var wire 1 , BUSYWAIT $end
$var integer 32 6" i [31:0] $end
$upscope $end
$scope module SHIFT $end
$var wire 32 7" VALUE [31:0] $end
$var wire 32 8" SHIFTEDVALUE [31:0] $end
$upscope $end
$upscope $end
$scope module mydatacache $end
$var wire 8 9" address [7:0] $end
$var wire 3 :" cache_tag [2:0] $end
$var wire 1 . clock $end
$var wire 8 ;" cpu_writeData [7:0] $end
$var wire 1 <" dirty $end
$var wire 1 =" hit $end
$var wire 1 " read $end
$var wire 1 0 reset $end
$var wire 1 ! write $end
$var wire 3 >" tag [2:0] $end
$var wire 2 ?" offset [1:0] $end
$var wire 32 @" mem_readdata [31:0] $end
$var wire 1 ( mem_busywait $end
$var wire 3 A" index [2:0] $end
$var parameter 3 B" IDLE $end
$var parameter 3 C" MEM_READ $end
$var parameter 3 D" MEM_WRITE $end
$var reg 1 , busywait $end
$var reg 1 E" cache_write $end
$var reg 8 F" cpu_readData [7:0] $end
$var reg 6 G" mem_address [5:0] $end
$var reg 1 ' mem_read $end
$var reg 1 % mem_write $end
$var reg 32 H" mem_writedata [31:0] $end
$var reg 3 I" next_state [2:0] $end
$var reg 3 J" state [2:0] $end
$var reg 1 K" tagmatch $end
$var integer 32 L" i [31:0] $end
$upscope $end
$scope module mydatamemory $end
$var wire 6 M" address [5:0] $end
$var wire 1 . clock $end
$var wire 1 ' read $end
$var wire 1 0 reset $end
$var wire 1 % write $end
$var wire 32 N" writedata [31:0] $end
$var reg 1 ( busywait $end
$var reg 1 O" readaccess $end
$var reg 32 P" readdata [31:0] $end
$var reg 1 Q" writeaccess $end
$var integer 32 R" i [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 S" \register[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 T" \register[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 U" \register[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 V" \register[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 W" \register[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 X" \register[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 Y" \register[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 Z" \register[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 [" \cacheblock_array[0] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 \" \cacheblock_array[1] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 ]" \cacheblock_array[2] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 ^" \cacheblock_array[3] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 _" \cacheblock_array[4] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 `" \cacheblock_array[5] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 a" \cacheblock_array[6] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 32 b" \cacheblock_array[7] [31:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 c" \memory_array[0] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 d" \memory_array[1] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 e" \memory_array[2] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 f" \memory_array[3] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 g" \memory_array[4] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 h" \memory_array[5] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 i" \memory_array[6] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 j" \memory_array[7] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatamemory $end
$var reg 8 k" \memory_array[8] [7:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 l" \dirty_array[0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 m" \dirty_array[1] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 n" \dirty_array[2] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 o" \dirty_array[3] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 p" \dirty_array[4] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 q" \dirty_array[5] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 r" \dirty_array[6] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 s" \dirty_array[7] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 t" \valid_array[0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 u" \valid_array[1] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 v" \valid_array[2] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 w" \valid_array[3] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 x" \valid_array[4] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 y" \valid_array[5] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 z" \valid_array[6] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 1 {" \valid_array[7] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 |" \tagArray[0] [2:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 }" \tagArray[1] [2:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 ~" \tagArray[2] [2:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 !# \tagArray[3] [2:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 "# \tagArray[4] [2:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 ## \tagArray[5] [2:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 $# \tagArray[6] [2:0] $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mydatacache $end
$var reg 3 %# \tagArray[7] [2:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 D"
b1 C"
b0 B"
$end
#0
$dumpvars
bx %#
bx $#
bx ##
bx "#
bx !#
bx ~"
bx }"
bx |"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
bx k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
xQ"
bx P"
xO"
bx N"
bx M"
bx L"
xK"
bx J"
bx I"
bx H"
bx G"
bx F"
xE"
bx A"
bx @"
bx ?"
bx >"
x="
x<"
bx ;"
bz :"
bx 9"
bx00 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx00 ~
bx }
bx |
bx {
bx z
bx y
xx
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
x\
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
xO
xN
xM
xL
xK
xJ
xI
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx00 ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
x4
bx 3
bx 2
bx 1
00
bx /
0.
bx -
x,
bx +
bx *
bx )
x(
x'
bx &
x%
bx $
bx #
x"
x!
$end
#20
b0xxxxxxxx $
b0xxxxxxxx H"
b0xxxxxxxx N"
0%
0'
b0 I"
0z"
0r"
0y"
0q"
0x"
0p"
0w"
0o"
0v"
0n"
0u"
0m"
0t"
0l"
b111 L"
b0 J"
0Q"
0O"
0(
b0 k"
b0 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b100000000 R"
10
#40
0z"
0r"
0y"
0q"
0x"
0p"
0w"
0o"
0v"
0n"
0u"
0m"
0t"
0l"
b111 L"
1.
#50
b0 #
b0 F
b0 ."
b0 Z"
b0 Y"
b0 X"
b0 W"
b0 V"
b0 U"
b0 T"
b0 S"
b1000 6"
#60
b100 <
b100 *"
b100 8
b100 !"
b100 )"
b100 /"
00
#70
b0 =
b0 V
b0 ]
b0 `
b0 c
b0 i
b0 k
b0 q
b0 t
b0 '"
b0 ?
b0 ~
b0 8"
b0 @
b0 |
b0 7"
b0 D
b0 {
b10 C
b10 %"
b10 H
b10 5"
b0 G
b0 3"
b0 B
b0 1"
b0 E
b10 /
b10 2
#80
b0 6
b0 -"
b0 0"
b10 =
b10 V
b10 ]
b10 `
b10 c
b10 i
b10 k
b10 q
b10 t
b10 '"
0,
b0 -
b0 1
b0 9"
b0 5
b0 [
b0 +"
0\
b1 z
b1 h
b1 p
b0 Y
b0 b
b0 U
b0 j
0!
0"
1I
b0 A
b0 Q
0K
0J
0M
1L
0O
0.
#90
b10 6
b10 -"
b10 0"
b0 >
b0 $"
b0 &"
0="
04
b10 -
b10 1
b10 9"
b10 5
b10 [
b10 +"
b10 S
b10 s
b11 p
b0 T
b0 m
b0 n
b0 o
b11 h
b0 X
b0 e
b0 f
b0 g
b11 z
b0 R
b0 v
b0 w
0x
b0 y
b10 U
b10 j
b0 >"
b0 A"
b0 ?"
b10 Z
b10 _
b100 9
b100 }
b100 ("
b0 :
b0 #"
b0 4"
b0 *
b0 3
b0 ;"
b0 ;
b0 W
b0 ^
b0 a
b0 d
b0 l
b0 r
b0 u
b0 2"
#99
0K"
#100
b10 ?"
b0 P
b0 ""
0<"
#120
1.
#130
b100 #
b100 F
b100 ."
b10 S"
#140
b1000 <
b1000 *"
b1000 8
b1000 !"
b1000 )"
b1000 /"
#150
b100 =
b100 V
b100 ]
b100 `
b100 c
b100 i
b100 k
b100 q
b100 t
b100 '"
b100 ?
b100 ~
b100 8"
b1 @
b1 |
b1 7"
b1 D
b1 {
b100 C
b100 %"
b100 H
b100 5"
b1 B
b1 1"
b10000000000000100 /
b10000000000000100 2
b10 *
b10 3
b10 ;"
b10 ;
b10 W
b10 ^
b10 a
b10 d
b10 l
b10 r
b10 u
b10 2"
#160
b100 6
b100 -"
b100 0"
b100 -
b100 1
b100 9"
b100 5
b100 [
b100 +"
b100 U
b100 j
0x
b100000 R
b100000 v
b100000 w
b101 z
b100000 y
b0 X
b0 e
b0 f
b101 h
b0 g
b0 T
b0 m
b0 n
b101 p
b0 o
b110 S
b110 s
0.
#170
b1 A"
b0 ?"
b1100 9
b1100 }
b1100 ("
b110 Z
b110 _
#200
1.
#210
b1000 #
b1000 F
b1000 ."
b100 T"
#220
b1100 <
b1100 *"
b1100 8
b1100 !"
b1100 )"
b1100 /"
#230
b110 =
b110 V
b110 ]
b110 `
b110 c
b110 i
b110 k
b110 q
b110 t
b110 '"
b1000 ?
b1000 ~
b1000 8"
b10 @
b10 |
b10 7"
b10 D
b10 {
b110 C
b110 %"
b110 H
b110 5"
b10 B
b10 1"
b100000000000000110 /
b100000000000000110 2
#240
b110 6
b110 -"
b110 0"
b110 -
b110 1
b110 9"
b110 5
b110 [
b110 +"
b10 Y
b10 b
b0 T
b0 m
b0 n
b111 p
b0 o
b0 X
b0 e
b0 f
b111 h
b0 g
0x
b1000 R
b1000 v
b1000 w
b111 z
b1000 y
b110 U
b110 j
0.
#250
b10 ?"
b1000 Z
b1000 _
b10100 9
b10100 }
b10100 ("
#280
1.
#290
b1100 #
b1100 F
b1100 ."
b110 U"
#300
b10000 <
b10000 *"
b10000 8
b10000 !"
b10000 )"
b10000 /"
#310
b1000 =
b1000 V
b1000 ]
b1000 `
b1000 c
b1000 i
b1000 k
b1000 q
b1000 t
b1000 '"
b1100 ?
b1100 ~
b1100 8"
b11 @
b11 |
b11 7"
b11 D
b11 {
b1000 C
b1000 %"
b0 H
b0 5"
b11 B
b11 1"
b110000000000001000 /
b110000000000001000 2
#320
b1000 6
b1000 -"
b1000 0"
b1000 -
b1000 1
b1000 9"
b1000 5
b1000 [
b1000 +"
0x
b10 R
b10 v
b10 w
b1001 z
b10 y
b0 X
b0 e
b0 f
b1001 h
b0 g
b0 T
b0 m
b0 n
b1001 p
b0 o
b1010 S
b1010 s
b0 Y
b0 b
b1000 U
b1000 j
0.
#330
b10 >
b10 $"
b10 &"
b10 A"
b0 ?"
b1010 Z
b1010 _
b11100 9
b11100 }
b11100 ("
b10 :
b10 #"
b10 4"
#340
b11111110 P
b11111110 ""
#360
1.
#370
b10000 #
b10000 F
b10000 ."
b1000 V"
#380
b10100 <
b10100 *"
b10100 8
b10100 !"
b10100 )"
b10100 /"
#390
b1010 =
b1010 V
b1010 ]
b1010 `
b1010 c
b1010 i
b1010 k
b1010 q
b1010 t
b1010 '"
b10000 ?
b10000 ~
b10000 8"
b100 @
b100 |
b100 7"
b100 D
b100 {
b1010 C
b1010 %"
b10 H
b10 5"
b100 B
b100 1"
b1000000000000001010 /
b1000000000000001010 2
#400
b1010 6
b1010 -"
b1010 0"
b1010 -
b1010 1
b1010 9"
b1010 5
b1010 [
b1010 +"
b10 Y
b10 b
b0 T
b0 m
b0 n
b1011 p
b0 o
b0 X
b0 e
b0 f
b1011 h
b0 g
0x
b10000000 y
b10000000 R
b10000000 v
b0 w
b1011 z
b1010 U
b1010 j
0.
#410
b110 >
b110 $"
b110 &"
b10 ?"
b1100 Z
b1100 _
b100100 9
b100100 }
b100100 ("
b110 :
b110 #"
b110 4"
#420
b11111010 P
b11111010 ""
#440
1.
#450
b10100 #
b10100 F
b10100 ."
b1010 W"
#460
b11000 <
b11000 *"
b11000 8
b11000 !"
b11000 )"
b11000 /"
#470
b1 =
b1 V
b1 ]
b1 `
b1 c
b1 i
b1 k
b1 q
b1 t
b1 '"
b10100 ?
b10100 ~
b10100 8"
b101 @
b101 |
b101 7"
b101 D
b101 {
b1 C
b1 %"
b1 H
b1 5"
b101 B
b101 1"
b1010000000000000001 /
b1010000000000000001 2
#480
b1 6
b1 -"
b1 0"
b1 -
b1 1
b1 9"
b1 5
b1 [
b1 +"
1x
b1 R
b1 v
b1 w
b10 z
b1 y
b1 X
b1 e
b1 f
b10 h
b1 g
b1 T
b1 m
b1 n
b10 p
b1 o
b11 S
b11 s
b0 Y
b0 b
b1 U
b1 j
0.
#490
b100 >
b100 $"
b100 &"
b0 A"
b1 ?"
b11 Z
b11 _
b101100 9
b101100 }
b101100 ("
b100 :
b100 #"
b100 4"
#500
b11111100 P
b11111100 ""
#520
1.
#530
b11000 #
b11000 F
b11000 ."
b1 X"
#540
b11100 <
b11100 *"
b11100 8
b11100 !"
b11100 )"
b11100 /"
#550
b11 =
b11 V
b11 ]
b11 `
b11 c
b11 i
b11 k
b11 q
b11 t
b11 '"
b11000 ?
b11000 ~
b11000 8"
b110 @
b110 |
b110 7"
b110 D
b110 {
b11 C
b11 %"
b11 H
b11 5"
b110 B
b110 1"
b1100000000000000011 /
b1100000000000000011 2
#560
b11 6
b11 -"
b11 0"
b11 -
b11 1
b11 9"
b11 5
b11 [
b11 +"
b10 Y
b10 b
b0 T
b0 m
b0 n
b100 p
b0 o
b0 X
b0 e
b0 f
b100 h
b0 g
b1000000 R
b1000000 v
b1000000 w
b100 z
0x
b1000000 y
b11 U
b11 j
0.
#570
b1000 >
b1000 $"
b1000 &"
b11 ?"
b101 Z
b101 _
b110100 9
b110100 }
b110100 ("
b1000 :
b1000 #"
b1000 4"
#580
b11111000 P
b11111000 ""
#600
1.
#610
b11100 #
b11100 F
b11100 ."
b11 Y"
#620
b100000 <
b100000 *"
b100000 8
b100000 !"
b100000 )"
b100000 /"
#630
b101 =
b101 V
b101 ]
b101 `
b101 c
b101 i
b101 k
b101 q
b101 t
b101 '"
b11100 ?
b11100 ~
b11100 8"
b111 @
b111 |
b111 7"
b111 D
b111 {
b101 C
b101 %"
b101 H
b101 5"
b111 B
b111 1"
b1110000000000000101 /
b1110000000000000101 2
#640
b101 6
b101 -"
b101 0"
b101 -
b101 1
b101 9"
b101 5
b101 [
b101 +"
0x
b10000 R
b10000 v
b10000 w
b110 z
b10000 y
b0 X
b0 e
b0 f
b110 h
b0 g
b0 T
b0 m
b0 n
b110 p
b0 o
b111 S
b111 s
b0 Y
b0 b
b101 U
b101 j
0.
#650
b1 >
b1 $"
b1 &"
b1 A"
b1 ?"
b111 Z
b111 _
b111100 9
b111100 }
b111100 ("
b1 :
b1 #"
b1 4"
#660
b11111111 P
b11111111 ""
#680
1.
#690
b100000 #
b100000 F
b100000 ."
b101 Z"
#700
b100100 <
b100100 *"
b100100 8
b100100 !"
b100100 )"
b100100 /"
#710
b0 =
b0 V
b0 ]
b0 `
b0 c
b0 i
b0 k
b0 q
b0 t
b0 '"
b0 ?
b0 ~
b0 8"
b0 @
b0 |
b0 7"
b0 D
b0 {
b0 C
b0 %"
b0 H
b0 5"
b1 G
b1 3"
b0 B
b0 1"
b10000 E
b10000000000000000000100000000 /
b10000000000000000000100000000 2
#720
b0 6
b0 -"
b0 0"
b0 -
b0 1
b0 9"
b0 5
b0 [
b0 +"
b1 I"
1,
b10 S
b10 s
b1 p
b10 o
b1 h
b10 g
b1 z
b10 y
b0 U
b0 j
1!
0I
0.
#730
b10 >
b10 $"
b10 &"
b0 A"
b0 ?"
b100 Z
b100 _
b100100 9
b100100 }
b100100 ("
b10 :
b10 #"
b10 4"
b100 *
b100 3
b100 ;"
b100 ;
b100 W
b100 ^
b100 a
b100 d
b100 l
b100 r
b100 u
b100 2"
#740
b11111110 P
b11111110 ""
b100 y
b100 g
b100 o
b100 S
b100 s
#760
1O"
1(
bx $
bx H"
bx N"
b0 )
b0 G"
b0 M"
1'
b1 I"
b1 J"
1.
#800
0.
#840
b0 &
b0 @"
b0 P"
1.
#880
0.
#920
1.
#960
0.
#1000
1.
#1040
0.
#1080
1.
#1120
0.
#1160
1.
#1200
0.
#1240
b0 J"
b1 I"
1.
0O"
0(
#1250
b0 +
b0 7
b0 ,"
b0 F"
b0 |"
1t"
b0 ["
#1259
0!
b0 I"
1E"
0,
1="
1K"
#1280
0.
#1320
1.
#1330
b100100 #
b100100 F
b100100 ."
b0xxxxxxxx $
b0xxxxxxxx H"
b0xxxxxxxx N"
bx )
bx G"
bx M"
0'
b100 +
b100 7
b100 ,"
b100 F"
1l"
b100 ["
#1340
b101000 <
b101000 *"
b101000 8
b101000 !"
b101000 )"
b101000 /"
1<"
#1350
b100 =
b100 V
b100 ]
b100 `
b100 c
b100 i
b100 k
b100 q
b100 t
b100 '"
b100 C
b100 %"
b100 H
b100 5"
b10 G
b10 3"
b10000000000000000001000000100 /
b10000000000000000001000000100 2
#1360
b100 6
b100 -"
b100 0"
b100 -
b100 1
b100 9"
b100 5
b100 [
b100 +"
0,
b100 Y
b100 b
b101 p
b0 o
b0 T
b0 m
b0 n
b101 h
b0 g
b0 X
b0 e
b0 f
0x
b101 z
b1000000 y
b1000000 R
b1000000 v
b1000000 w
b100 U
b100 j
0!
b101000 9
b101000 }
b101000 ("
0.
#1370
b1010 >
b1010 $"
b1010 &"
0="
bx +
bx 7
bx ,"
bx F"
b1 A"
b1010 Z
b1010 _
b1010 :
b1010 #"
b1010 4"
b110 *
b110 3
b110 ;"
b110 ;
b110 W
b110 ^
b110 a
b110 d
b110 l
b110 r
b110 u
b110 2"
#1379
0K"
#1380
b11110110 P
b11110110 ""
0x
b1100000 R
b1100000 v
b1100000 w
b101 z
b1100000 y
b0 X
b0 e
b0 f
b101 h
b0 g
b0 T
b0 m
b0 n
b101 p
b0 o
b110 S
b110 s
0<"
#1400
1.
#1410
b101000 #
b101000 F
b101000 ."
b110 +
b110 7
b110 ,"
b110 F"
1m"
bx00000110 \"
#1420
b101100 <
b101100 *"
b101100 8
b101100 !"
b101100 )"
b101100 /"
1<"
#1430
b101 =
b101 V
b101 ]
b101 `
b101 c
b101 i
b101 k
b101 q
b101 t
b101 '"
b101 C
b101 %"
b101 H
b101 5"
b100 G
b100 3"
b10000000000000000010000000101 /
b10000000000000000010000000101 2
#1440
b101 6
b101 -"
b101 0"
b101 -
b101 1
b101 9"
b101 5
b101 [
b101 +"
b10 I"
1,
b111 S
b111 s
b0 T
b0 m
b0 n
b110 p
b0 o
b0 X
b0 e
b0 f
b110 h
b0 g
0x
b110000 R
b110000 v
b110000 w
b110 z
b110000 y
b101 U
b101 j
1!
b101100 9
b101100 }
b101100 ("
0.
#1450
b1 >
b1 $"
b1 &"
bx +
bx 7
bx ,"
bx F"
b1 ?"
b1111 Z
b1111 _
b1 :
b1 #"
b1 4"
b1010 *
b1010 3
b1010 ;"
b1010 ;
b1010 W
b1010 ^
b1010 a
b1010 d
b1010 l
b1010 r
b1010 u
b1010 2"
#1460
b11111111 P
b11111111 ""
0x
b1010000 R
b1010000 v
b1010000 w
b110 z
b1010000 y
b0 X
b0 e
b0 f
b110 h
b0 g
b0 T
b0 m
b0 n
b110 p
b0 o
b1111 S
b1111 s
b0 Y
b0 b
#1480
1Q"
1(
0m"
bx00000110 $
bx00000110 H"
bx00000110 N"
bz001 )
bz001 G"
bz001 M"
1%
b10 I"
b10 J"
1.
#1490
bx0000101000000110 $
bx0000101000000110 H"
bx0000101000000110 N"
b1010 +
b1010 7
b1010 ,"
b1010 F"
0<"
1m"
bx0000101000000110 \"
#1500
1<"
#1520
0.
#1560
1.
#1570
1m"
bx0000101000000110 \"
#1600
0.
#1640
1.
#1650
1m"
bx0000101000000110 \"
#1680
0.
#1720
1.
#1730
1m"
bx0000101000000110 \"
#1760
0.
#1800
1.
#1810
1m"
bx0000101000000110 \"
#1840
0.
#1880
1.
#1890
1m"
bx0000101000000110 \"
#1920
0.
#1960
1.
#1970
1m"
bx0000101000000110 \"
#2000
0.
#2040
1.
#2050
1m"
bx0000101000000110 \"
#2080
0.
#2120
1.
#2130
1m"
bx0000101000000110 \"
#2160
0.
#2200
1.
#2210
1m"
bx0000101000000110 \"
#2240
0.
#2280
1.
#2290
1m"
bx0000101000000110 \"
#2320
0.
#2360
1.
#2370
1m"
bx0000101000000110 \"
#2400
0.
#2440
1.
#2450
1m"
bx0000101000000110 \"
#2480
0.
#2520
1.
#2530
1m"
bx0000101000000110 \"
#2560
0.
#2600
1.
#2610
1m"
bx0000101000000110 \"
#2640
0.
#2680
1.
#2690
1m"
bx0000101000000110 \"
#2720
0.
#2760
1.
#2770
1m"
bx0000101000000110 \"
#2800
0.
#2840
1.
#2850
1m"
bx0000101000000110 \"
#2880
0.
#2920
1.
#2930
1m"
bx0000101000000110 \"
#2960
0.
#3000
1.
#3010
1m"
bx0000101000000110 \"
#3040
0.
#3080
1.
#3090
1m"
bx0000101000000110 \"
#3120
0.
#3160
1O"
bx $
bx H"
bx N"
b1 )
b1 G"
b1 M"
0%
1'
b1 J"
0m"
b1 I"
1.
0Q"
1(
#3170
1m"
bx0000101000000110 \"
0<"
#3180
1<"
#3200
0.
#3240
1.
#3250
1m"
bx0000101000000110 \"
#3280
0.
#3320
1.
#3330
1m"
bx0000101000000110 \"
#3360
0.
#3400
1.
#3410
1m"
bx0000101000000110 \"
#3440
0.
#3480
1.
#3490
1m"
bx0000101000000110 \"
#3520
0.
#3560
1.
#3570
1m"
bx0000101000000110 \"
#3600
0.
#3640
b0 J"
b10 I"
1.
0O"
0(
#3650
b0xxxxxxxx $
b0xxxxxxxx H"
b0xxxxxxxx N"
bx )
bx G"
bx M"
0'
1m"
b0 }"
1u"
b101000000000 \"
#3659
0!
b0 I"
0,
1="
1K"
#3680
0.
#3720
1.
#3730
b101100 #
b101100 F
b101100 ."
1m"
b101000000000 \"
#3740
b110000 <
b110000 *"
b110000 8
b110000 !"
b110000 )"
b110000 /"
#3750
b10 =
b10 V
b10 ]
b10 `
b10 c
b10 i
b10 k
b10 q
b10 t
b10 '"
b10 C
b10 %"
b10 H
b10 5"
b111 G
b111 3"
b10000000000000000011100000010 /
b10000000000000000011100000010 2
#3760
b10 6
b10 -"
b10 0"
b10 -
b10 1
b10 9"
b10 5
b10 [
b10 +"
0,
b10 Y
b10 b
b1010 S
b1010 s
b10 T
b10 m
b10 n
b11 p
b10 o
b10 X
b10 e
b10 f
b11 h
b10 g
0x
b10000010 R
b10000010 v
b10 w
b11 z
b10000010 y
b10 U
b10 j
0!
b110000 9
b110000 }
b110000 ("
0.
#3770
b110 >
b110 $"
b110 &"
b0 +
b0 7
b0 ,"
b0 F"
b0 A"
b10 ?"
b111 Z
b111 _
b110 :
b110 #"
b110 4"
b101 *
b101 3
b101 ;"
b101 ;
b101 W
b101 ^
b101 a
b101 d
b101 l
b101 r
b101 u
b101 2"
#3780
b11111010 P
b11111010 ""
b1000001 R
b1000001 v
b1000001 w
b11 z
1x
b1000001 y
b1 X
b1 e
b1 f
b11 h
b1 g
b1 T
b1 m
b1 n
b11 p
b1 o
b111 S
b111 s
b0 Y
b0 b
#3800
1.
#3810
b110000 #
b110000 F
b110000 ."
b101 +
b101 7
b101 ,"
b101 F"
1l"
b1010000000000000100 ["
#3820
b110100 <
b110100 *"
b110100 8
b110100 !"
b110100 )"
b110100 /"
#3830
b0 =
b0 V
b0 ]
b0 `
b0 c
b0 i
b0 k
b0 q
b0 t
b0 '"
b100 ?
b100 ~
b100 8"
b1 @
b1 |
b1 7"
b1 D
b1 {
b0 C
b0 %"
b0 H
b0 5"
b0 G
b0 3"
b1 B
b1 1"
b1110 E
b1110000000010000000000000000 /
b1110000000010000000000000000 2
#3840
b0 6
b0 -"
b0 0"
0="
b0 -
b0 1
b0 9"
b0 5
b0 [
b0 +"
0K"
0,
b101 S
b101 s
b1 p
b101 o
b1 h
b101 g
b1 z
b101 y
b0 U
b0 j
0"
1I
0.
#3850
b10 >
b10 $"
b10 &"
b100 +
b100 7
b100 ,"
b100 F"
b0 ?"
b10 Z
b10 _
b111000 9
b111000 }
b111000 ("
b10 :
b10 #"
b10 4"
b10 *
b10 3
b10 ;"
b10 ;
b10 W
b10 ^
b10 a
b10 d
b10 l
b10 r
b10 u
b10 2"
#3860
b11111110 P
b11111110 ""
0x
b10 y
b10 g
b10 o
b10 S
b10 s
#3880
1.
#3890
b110100 #
b110100 F
b110100 ."
b0 T"
b10 +
b10 7
b10 ,"
b10 F"
1l"
b1010000000000000010 ["
#3900
b111000 <
b111000 *"
b111000 8
b111000 !"
b111000 )"
b111000 /"
#3910
bx =
bx V
bx ]
bx `
bx c
bx i
bx k
bx q
bx t
bx '"
b0xxxxxxxx00 ?
b0xxxxxxxx00 ~
b0xxxxxxxx00 8"
b0xxxxxxxx @
b0xxxxxxxx |
b0xxxxxxxx 7"
bx D
bx {
bx C
bx %"
bx H
bx 5"
bx G
bx 3"
bx B
bx 1"
bx E
bx /
bx 2
#3920
bx 6
bx -"
bx 0"
bx -
bx 1
bx 9"
bx 5
bx [
bx +"
b0x0 Y
b0x0 b
bx1x S
bx1x s
bx U
bx j
0.
#3930
bx >
bx $"
bx &"
bx >"
bx A"
bx ?"
bx Z
bx _
bx 9
bx }
bx ("
bx :
bx #"
bx 4"
bx *
bx 3
bx ;"
bx ;
bx W
bx ^
bx a
bx d
bx l
bx r
bx u
bx 2"
#3940
bx P
bx ""
xx
bx y
bx g
bx o
bx S
bx s
bx Y
bx b
x<"
#3960
1.
#3970
b111000 #
b111000 F
b111000 ."
#3980
b111100 <
b111100 *"
b111100 8
b111100 !"
b111100 )"
b111100 /"
#4000
0.
#4040
1.
#4050
b111100 #
b111100 F
b111100 ."
#4060
b1000000 <
b1000000 *"
b1000000 8
b1000000 !"
b1000000 )"
b1000000 /"
#4080
0.
#4120
1.
#4130
b1000000 #
b1000000 F
b1000000 ."
#4140
b1000100 <
b1000100 *"
b1000100 8
b1000100 !"
b1000100 )"
b1000100 /"
#4160
0.
#4200
1.
#4210
b1000100 #
b1000100 F
b1000100 ."
#4220
b1001000 <
b1001000 *"
b1001000 8
b1001000 !"
b1001000 )"
b1001000 /"
#4240
0.
#4280
1.
#4290
b1001000 #
b1001000 F
b1001000 ."
#4300
b1001100 <
b1001100 *"
b1001100 8
b1001100 !"
b1001100 )"
b1001100 /"
#4320
0.
#4360
1.
#4370
b1001100 #
b1001100 F
b1001100 ."
#4380
b1010000 <
b1010000 *"
b1010000 8
b1010000 !"
b1010000 )"
b1010000 /"
#4400
0.
#4440
1.
#4450
b1010000 #
b1010000 F
b1010000 ."
#4460
b1010100 <
b1010100 *"
b1010100 8
b1010100 !"
b1010100 )"
b1010100 /"
#4480
0.
#4520
1.
#4530
b1010100 #
b1010100 F
b1010100 ."
#4540
b1011000 <
b1011000 *"
b1011000 8
b1011000 !"
b1011000 )"
b1011000 /"
#4560
0.
#4600
1.
#4610
b1011000 #
b1011000 F
b1011000 ."
#4620
b1011100 <
b1011100 *"
b1011100 8
b1011100 !"
b1011100 )"
b1011100 /"
#4640
0.
#4680
1.
#4690
b1011100 #
b1011100 F
b1011100 ."
#4700
b1100000 <
b1100000 *"
b1100000 8
b1100000 !"
b1100000 )"
b1100000 /"
#4720
0.
#4760
1.
#4770
b1100000 #
b1100000 F
b1100000 ."
#4780
b1100100 <
b1100100 *"
b1100100 8
b1100100 !"
b1100100 )"
b1100100 /"
#4800
0.
#4840
1.
#4850
b1100100 #
b1100100 F
b1100100 ."
#4860
b1101000 <
b1101000 *"
b1101000 8
b1101000 !"
b1101000 )"
b1101000 /"
#4880
0.
#4920
1.
#4930
b1101000 #
b1101000 F
b1101000 ."
#4940
b1101100 <
b1101100 *"
b1101100 8
b1101100 !"
b1101100 )"
b1101100 /"
#4960
0.
#5000
1.
#5010
b1101100 #
b1101100 F
b1101100 ."
#5020
b1110000 <
b1110000 *"
b1110000 8
b1110000 !"
b1110000 )"
b1110000 /"
#5040
0.
#5080
1.
#5090
b1110000 #
b1110000 F
b1110000 ."
#5100
b1110100 <
b1110100 *"
b1110100 8
b1110100 !"
b1110100 )"
b1110100 /"
#5120
0.
#5160
1.
#5170
b1110100 #
b1110100 F
b1110100 ."
#5180
b1111000 <
b1111000 *"
b1111000 8
b1111000 !"
b1111000 )"
b1111000 /"
#5200
0.
#5240
1.
#5250
b1111000 #
b1111000 F
b1111000 ."
#5260
b1111100 <
b1111100 *"
b1111100 8
b1111100 !"
b1111100 )"
b1111100 /"
#5280
0.
#5320
1.
#5330
b1111100 #
b1111100 F
b1111100 ."
#5340
b10000000 <
b10000000 *"
b10000000 8
b10000000 !"
b10000000 )"
b10000000 /"
#5360
0.
#5400
1.
#5410
b10000000 #
b10000000 F
b10000000 ."
#5420
b10000100 <
b10000100 *"
b10000100 8
b10000100 !"
b10000100 )"
b10000100 /"
#5440
0.
#5480
1.
#5490
b10000100 #
b10000100 F
b10000100 ."
#5500
b10001000 <
b10001000 *"
b10001000 8
b10001000 !"
b10001000 )"
b10001000 /"
#5520
0.
#5560
1.
#5570
b10001000 #
b10001000 F
b10001000 ."
#5580
b10001100 <
b10001100 *"
b10001100 8
b10001100 !"
b10001100 )"
b10001100 /"
#5600
0.
#5640
1.
#5650
b10001100 #
b10001100 F
b10001100 ."
#5660
b10010000 <
b10010000 *"
b10010000 8
b10010000 !"
b10010000 )"
b10010000 /"
#5680
0.
#5720
1.
#5730
b10010000 #
b10010000 F
b10010000 ."
#5740
b10010100 <
b10010100 *"
b10010100 8
b10010100 !"
b10010100 )"
b10010100 /"
#5760
0.
#5800
1.
#5810
b10010100 #
b10010100 F
b10010100 ."
#5820
b10011000 <
b10011000 *"
b10011000 8
b10011000 !"
b10011000 )"
b10011000 /"
#5840
0.
#5880
1.
#5890
b10011000 #
b10011000 F
b10011000 ."
#5900
b10011100 <
b10011100 *"
b10011100 8
b10011100 !"
b10011100 )"
b10011100 /"
#5920
0.
#5960
1.
#5970
b10011100 #
b10011100 F
b10011100 ."
#5980
b10100000 <
b10100000 *"
b10100000 8
b10100000 !"
b10100000 )"
b10100000 /"
#6000
0.
#6040
1.
#6050
b10100000 #
b10100000 F
b10100000 ."
#6060
b10100100 <
b10100100 *"
b10100100 8
b10100100 !"
b10100100 )"
b10100100 /"
#6080
0.
#6120
1.
#6130
b10100100 #
b10100100 F
b10100100 ."
#6140
b10101000 <
b10101000 *"
b10101000 8
b10101000 !"
b10101000 )"
b10101000 /"
#6160
0.
#6200
1.
#6210
b10101000 #
b10101000 F
b10101000 ."
#6220
b10101100 <
b10101100 *"
b10101100 8
b10101100 !"
b10101100 )"
b10101100 /"
#6240
0.
#6280
1.
#6290
b10101100 #
b10101100 F
b10101100 ."
#6300
b10110000 <
b10110000 *"
b10110000 8
b10110000 !"
b10110000 )"
b10110000 /"
#6320
0.
#6360
1.
#6370
b10110000 #
b10110000 F
b10110000 ."
#6380
b10110100 <
b10110100 *"
b10110100 8
b10110100 !"
b10110100 )"
b10110100 /"
#6400
0.
#6440
1.
#6450
b10110100 #
b10110100 F
b10110100 ."
#6460
b10111000 <
b10111000 *"
b10111000 8
b10111000 !"
b10111000 )"
b10111000 /"
#6480
0.
#6520
1.
#6530
b10111000 #
b10111000 F
b10111000 ."
#6540
b10111100 <
b10111100 *"
b10111100 8
b10111100 !"
b10111100 )"
b10111100 /"
#6560
0.
#6600
1.
#6610
b10111100 #
b10111100 F
b10111100 ."
#6620
b11000000 <
b11000000 *"
b11000000 8
b11000000 !"
b11000000 )"
b11000000 /"
#6640
0.
#6680
1.
#6690
b11000000 #
b11000000 F
b11000000 ."
#6700
b11000100 <
b11000100 *"
b11000100 8
b11000100 !"
b11000100 )"
b11000100 /"
#6720
0.
#6760
1.
#6770
b11000100 #
b11000100 F
b11000100 ."
#6780
b11001000 <
b11001000 *"
b11001000 8
b11001000 !"
b11001000 )"
b11001000 /"
#6800
0.
#6840
1.
#6850
b11001000 #
b11001000 F
b11001000 ."
#6860
b11001100 <
b11001100 *"
b11001100 8
b11001100 !"
b11001100 )"
b11001100 /"
#6880
0.
#6920
1.
#6930
b11001100 #
b11001100 F
b11001100 ."
#6940
b11010000 <
b11010000 *"
b11010000 8
b11010000 !"
b11010000 )"
b11010000 /"
#6960
0.
#7000
1.
#7010
b11010000 #
b11010000 F
b11010000 ."
#7020
b11010100 <
b11010100 *"
b11010100 8
b11010100 !"
b11010100 )"
b11010100 /"
#7040
0.
#7080
1.
#7090
b11010100 #
b11010100 F
b11010100 ."
#7100
b11011000 <
b11011000 *"
b11011000 8
b11011000 !"
b11011000 )"
b11011000 /"
#7120
0.
#7160
1.
#7170
b11011000 #
b11011000 F
b11011000 ."
#7180
b11011100 <
b11011100 *"
b11011100 8
b11011100 !"
b11011100 )"
b11011100 /"
#7200
0.
#7240
1.
#7250
b11011100 #
b11011100 F
b11011100 ."
#7260
b11100000 <
b11100000 *"
b11100000 8
b11100000 !"
b11100000 )"
b11100000 /"
#7280
0.
#7320
1.
#7330
b11100000 #
b11100000 F
b11100000 ."
#7340
b11100100 <
b11100100 *"
b11100100 8
b11100100 !"
b11100100 )"
b11100100 /"
#7360
0.
#7400
1.
#7410
b11100100 #
b11100100 F
b11100100 ."
#7420
b11101000 <
b11101000 *"
b11101000 8
b11101000 !"
b11101000 )"
b11101000 /"
#7440
0.
#7480
1.
#7490
b11101000 #
b11101000 F
b11101000 ."
#7500
b11101100 <
b11101100 *"
b11101100 8
b11101100 !"
b11101100 )"
b11101100 /"
#7520
0.
#7560
1.
#7570
b11101100 #
b11101100 F
b11101100 ."
#7580
b11110000 <
b11110000 *"
b11110000 8
b11110000 !"
b11110000 )"
b11110000 /"
#7600
0.
#7640
1.
#7650
b11110000 #
b11110000 F
b11110000 ."
#7660
b11110100 <
b11110100 *"
b11110100 8
b11110100 !"
b11110100 )"
b11110100 /"
#7680
0.
#7720
1.
#7730
b11110100 #
b11110100 F
b11110100 ."
#7740
b11111000 <
b11111000 *"
b11111000 8
b11111000 !"
b11111000 )"
b11111000 /"
#7760
0.
#7800
1.
#7810
b11111000 #
b11111000 F
b11111000 ."
#7820
b11111100 <
b11111100 *"
b11111100 8
b11111100 !"
b11111100 )"
b11111100 /"
#7840
0.
#7880
1.
#7890
b11111100 #
b11111100 F
b11111100 ."
#7900
b100000000 <
b100000000 *"
b100000000 8
b100000000 !"
b100000000 )"
b100000000 /"
#7920
0.
#7960
1.
#7970
b100000000 #
b100000000 F
b100000000 ."
#7980
b100000100 <
b100000100 *"
b100000100 8
b100000100 !"
b100000100 )"
b100000100 /"
#8000
0.
#8040
1.
#8050
b100000100 #
b100000100 F
b100000100 ."
#8060
b100001000 <
b100001000 *"
b100001000 8
b100001000 !"
b100001000 )"
b100001000 /"
#8080
0.
#8120
1.
#8130
b100001000 #
b100001000 F
b100001000 ."
#8140
b100001100 <
b100001100 *"
b100001100 8
b100001100 !"
b100001100 )"
b100001100 /"
#8160
0.
#8200
1.
#8210
b100001100 #
b100001100 F
b100001100 ."
#8220
b100010000 <
b100010000 *"
b100010000 8
b100010000 !"
b100010000 )"
b100010000 /"
#8240
0.
#8280
1.
#8290
b100010000 #
b100010000 F
b100010000 ."
#8300
b100010100 <
b100010100 *"
b100010100 8
b100010100 !"
b100010100 )"
b100010100 /"
#8320
0.
#8360
1.
#8370
b100010100 #
b100010100 F
b100010100 ."
#8380
b100011000 <
b100011000 *"
b100011000 8
b100011000 !"
b100011000 )"
b100011000 /"
#8400
0.
#8440
1.
#8450
b100011000 #
b100011000 F
b100011000 ."
#8460
b100011100 <
b100011100 *"
b100011100 8
b100011100 !"
b100011100 )"
b100011100 /"
#8480
0.
#8520
1.
#8530
b100011100 #
b100011100 F
b100011100 ."
#8540
b100100000 <
b100100000 *"
b100100000 8
b100100000 !"
b100100000 )"
b100100000 /"
#8560
0.
#8600
1.
#8610
b100100000 #
b100100000 F
b100100000 ."
#8620
b100100100 <
b100100100 *"
b100100100 8
b100100100 !"
b100100100 )"
b100100100 /"
#8640
0.
#8680
1.
#8690
b100100100 #
b100100100 F
b100100100 ."
#8700
b100101000 <
b100101000 *"
b100101000 8
b100101000 !"
b100101000 )"
b100101000 /"
#8720
0.
#8760
1.
#8770
b100101000 #
b100101000 F
b100101000 ."
#8780
b100101100 <
b100101100 *"
b100101100 8
b100101100 !"
b100101100 )"
b100101100 /"
#8800
0.
#8840
1.
#8850
b100101100 #
b100101100 F
b100101100 ."
#8860
b100110000 <
b100110000 *"
b100110000 8
b100110000 !"
b100110000 )"
b100110000 /"
#8880
0.
#8920
1.
#8930
b100110000 #
b100110000 F
b100110000 ."
#8940
b100110100 <
b100110100 *"
b100110100 8
b100110100 !"
b100110100 )"
b100110100 /"
#8960
0.
#9000
1.
#9010
b100110100 #
b100110100 F
b100110100 ."
#9020
b100111000 <
b100111000 *"
b100111000 8
b100111000 !"
b100111000 )"
b100111000 /"
#9040
0.
#9080
1.
#9090
b100111000 #
b100111000 F
b100111000 ."
#9100
b100111100 <
b100111100 *"
b100111100 8
b100111100 !"
b100111100 )"
b100111100 /"
#9120
0.
#9160
1.
#9170
b100111100 #
b100111100 F
b100111100 ."
#9180
b101000000 <
b101000000 *"
b101000000 8
b101000000 !"
b101000000 )"
b101000000 /"
#9200
0.
#9240
1.
#9250
b101000000 #
b101000000 F
b101000000 ."
#9260
b101000100 <
b101000100 *"
b101000100 8
b101000100 !"
b101000100 )"
b101000100 /"
#9280
0.
#9320
1.
#9330
b101000100 #
b101000100 F
b101000100 ."
#9340
b101001000 <
b101001000 *"
b101001000 8
b101001000 !"
b101001000 )"
b101001000 /"
#9360
0.
#9400
1.
#9410
b101001000 #
b101001000 F
b101001000 ."
#9420
b101001100 <
b101001100 *"
b101001100 8
b101001100 !"
b101001100 )"
b101001100 /"
#9440
0.
#9480
1.
#9490
b101001100 #
b101001100 F
b101001100 ."
#9500
b101010000 <
b101010000 *"
b101010000 8
b101010000 !"
b101010000 )"
b101010000 /"
#9520
0.
#9560
1.
#9570
b101010000 #
b101010000 F
b101010000 ."
#9580
b101010100 <
b101010100 *"
b101010100 8
b101010100 !"
b101010100 )"
b101010100 /"
#9600
0.
#9640
1.
#9650
b101010100 #
b101010100 F
b101010100 ."
#9660
b101011000 <
b101011000 *"
b101011000 8
b101011000 !"
b101011000 )"
b101011000 /"
#9680
0.
#9720
1.
#9730
b101011000 #
b101011000 F
b101011000 ."
#9740
b101011100 <
b101011100 *"
b101011100 8
b101011100 !"
b101011100 )"
b101011100 /"
#9760
0.
#9800
1.
#9810
b101011100 #
b101011100 F
b101011100 ."
#9820
b101100000 <
b101100000 *"
b101100000 8
b101100000 !"
b101100000 )"
b101100000 /"
#9840
0.
#9880
1.
#9890
b101100000 #
b101100000 F
b101100000 ."
#9900
b101100100 <
b101100100 *"
b101100100 8
b101100100 !"
b101100100 )"
b101100100 /"
#9920
0.
#9960
1.
#9970
b101100100 #
b101100100 F
b101100100 ."
#9980
b101101000 <
b101101000 *"
b101101000 8
b101101000 !"
b101101000 )"
b101101000 /"
#10000
0.
#10040
1.
#10050
b101101000 #
b101101000 F
b101101000 ."
#10060
b101101100 <
b101101100 *"
b101101100 8
b101101100 !"
b101101100 )"
b101101100 /"
