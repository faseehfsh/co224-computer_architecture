$date
	Fri Jun 09 08:53:15 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var reg 1 " CLK $end
$var reg 32 # INSTRUCTION [31:0] $end
$var reg 1 $ RESET $end
$scope module mycpu $end
$var wire 1 " CLK $end
$var wire 32 % INSTRUCTION [31:0] $end
$var wire 1 $ RESET $end
$var wire 1 & ZERO $end
$var wire 8 ' RESULT [7:0] $end
$var wire 32 ( PCPLUSFOUR [31:0] $end
$var wire 32 ) PCJUMP [31:0] $end
$var wire 8 * OPERAND2 [7:0] $end
$var wire 8 + OPERAND1 [7:0] $end
$var wire 32 , NEXTPC [31:0] $end
$var wire 8 - MUX2OUT [7:0] $end
$var wire 8 . MUX1OUT [7:0] $end
$var wire 32 / FINALJUMPCOUNT [31:0] $end
$var wire 32 0 EXTENDEDJUMPCOUNT [31:0] $end
$var reg 3 1 ALU_SELECT [2:0] $end
$var reg 3 2 DESTINATIONADDRESS [2:0] $end
$var reg 8 3 IMMEDIATE [7:0] $end
$var reg 8 4 JUMPCOUNT [7:0] $end
$var reg 8 5 OPCODE [7:0] $end
$var reg 32 6 PC [31:0] $end
$var reg 3 7 SOURCE1ADDRESS [2:0] $end
$var reg 3 8 SOURCE2ADDRESS [2:0] $end
$var reg 1 9 WRITE $end
$var reg 1 : isBEQ $end
$var reg 1 ; isBNE $end
$var reg 1 < isIMMEDIATE $end
$var reg 1 = isJUMP $end
$var reg 1 > isRIGHTSHIFT $end
$var reg 1 ? isSUBSTRACT $end
$var reg 8 @ twosComplement [7:0] $end
$scope module ALU $end
$var wire 3 A SELECT [2:0] $end
$var wire 1 > SHIFTINDICATOR $end
$var wire 8 B Rotate [7:0] $end
$var wire 8 C Or [7:0] $end
$var wire 8 D LogicalShift [7:0] $end
$var wire 8 E Fwd [7:0] $end
$var wire 8 F DATA2 [7:0] $end
$var wire 8 G DATA1 [7:0] $end
$var wire 8 H ArithmeticShift [7:0] $end
$var wire 8 I And [7:0] $end
$var wire 8 J Add [7:0] $end
$var reg 8 K RESULT [7:0] $end
$var reg 1 & ZERO $end
$var reg 1 L zero_flag $end
$scope module Add_ $end
$var wire 8 M DATA2 [7:0] $end
$var wire 8 N DATA1 [7:0] $end
$var reg 8 O RESULT [7:0] $end
$upscope $end
$scope module And_ $end
$var wire 8 P DATA2 [7:0] $end
$var wire 8 Q DATA1 [7:0] $end
$var reg 8 R RESULT [7:0] $end
$upscope $end
$scope module ArithmeticShift_ $end
$var wire 8 S SHIFTAMOUNT [7:0] $end
$var wire 8 T OPERAND [7:0] $end
$var reg 8 U RESULT [7:0] $end
$var reg 7 V temp [6:0] $end
$var reg 8 W tempOperand [7:0] $end
$var integer 32 X j [31:0] $end
$upscope $end
$scope module Forward_ $end
$var wire 8 Y DATA2 [7:0] $end
$var reg 8 Z RESULT [7:0] $end
$upscope $end
$scope module LogicalShift_ $end
$var wire 1 > SHIFTSIDE $end
$var wire 8 [ SHIFTAMOUNT [7:0] $end
$var wire 8 \ OPERAND [7:0] $end
$var reg 8 ] RESULT [7:0] $end
$var reg 7 ^ temp [6:0] $end
$var reg 8 _ tempOperand [7:0] $end
$var integer 32 ` i [31:0] $end
$upscope $end
$scope module Or_ $end
$var wire 8 a DATA2 [7:0] $end
$var wire 8 b DATA1 [7:0] $end
$var reg 8 c RESULT [7:0] $end
$upscope $end
$scope module Rotate_ $end
$var wire 8 d ROTATEAMOUNT [7:0] $end
$var wire 8 e OPERAND [7:0] $end
$var reg 8 f RESULT [7:0] $end
$var reg 7 g temp [6:0] $end
$var reg 1 h tempLSB $end
$var reg 8 i tempOperand [7:0] $end
$var integer 32 j k [31:0] $end
$upscope $end
$upscope $end
$scope module EXTENDOFFSET $end
$var wire 8 k OFFSET [7:0] $end
$var reg 32 l EXTENDEDOFFSET [31:0] $end
$upscope $end
$scope module JUMPTO $end
$var wire 32 m TARGETPC [31:0] $end
$var wire 32 n JUMPBY [31:0] $end
$var wire 32 o CURRENTPC [31:0] $end
$upscope $end
$scope module MUX1 $end
$var wire 8 p DATA1 [7:0] $end
$var wire 1 ? SELECT $end
$var wire 8 q DATA2 [7:0] $end
$var reg 8 r OUTPUT [7:0] $end
$upscope $end
$scope module MUX2 $end
$var wire 8 s DATA1 [7:0] $end
$var wire 8 t DATA2 [7:0] $end
$var wire 1 < SELECT $end
$var reg 8 u OUTPUT [7:0] $end
$upscope $end
$scope module MUX3 $end
$var wire 1 : BEQSELECT $end
$var wire 1 ; BNESELECT $end
$var wire 32 v DATA1 [31:0] $end
$var wire 1 = JUMPSELECT $end
$var wire 1 & ZEROSELECT $end
$var wire 32 w DATA2 [31:0] $end
$var reg 32 x OUTPUT [31:0] $end
$upscope $end
$scope module NEXTPCVAl $end
$var wire 32 y IN [31:0] $end
$var reg 32 z OUT [31:0] $end
$upscope $end
$scope module REGISTER $end
$var wire 1 " CLK $end
$var wire 8 { IN [7:0] $end
$var wire 3 | INADDRESS [2:0] $end
$var wire 8 } OUT1 [7:0] $end
$var wire 3 ~ OUT1ADDRESS [2:0] $end
$var wire 8 !" OUT2 [7:0] $end
$var wire 3 "" OUT2ADDRESS [2:0] $end
$var wire 1 $ RESET $end
$var wire 1 9 WRITE $end
$var integer 32 #" i [31:0] $end
$upscope $end
$scope module SHIFT $end
$var wire 32 $" VALUE [31:0] $end
$var wire 32 %" SHIFTEDVALUE [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 &" \register[0] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 '" \register[1] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 (" \register[2] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 )" \register[3] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 *" \register[4] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 +" \register[5] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 ," \register[6] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope module cpu_tb $end
$scope module mycpu $end
$scope module REGISTER $end
$var reg 8 -" \register[7] [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx00 %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx00 n
bx m
bx l
bx k
bx j
bx i
xh
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
xL
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
x?
x>
x=
x<
x;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx00 /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
x&
bx %
0$
bx #
0"
bx !
$end
#2
1$
#4
1"
#5
b0 !
b0 6
b0 y
b0 -"
b0 ,"
b0 +"
b0 *"
b0 )"
b0 ("
b0 '"
b0 &"
b1000 #"
#6
b100 ,
b100 x
b100 (
b100 o
b100 w
b100 z
0$
#7
b0 -
b0 F
b0 M
b0 P
b0 S
b0 Y
b0 [
b0 a
b0 d
b0 u
b0 /
b0 n
b0 %"
b0 0
b0 l
b0 $"
b0 4
b0 k
b1001 3
b1001 s
b1 8
b1 ""
b0 7
b0 ~
b0 2
b0 |
b0 5
b1001 #
b1001 %
#8
b1001 -
b1001 F
b1001 M
b1001 P
b1001 S
b1001 Y
b1001 [
b1001 a
b1001 d
b1001 u
b0 '
b0 K
b0 {
0L
b1 j
b1 X
b1 `
b0 I
b0 R
b0 E
b0 Z
19
b0 1
b0 A
0;
0:
0=
1<
0?
0"
#9
b0 .
b0 r
b0 t
0&
b1001 '
b1001 K
b1001 {
b1001 C
b1001 c
b1010 `
b0 D
b0 ]
b0 ^
b0 _
b1010 X
b0 H
b0 U
b0 V
b0 W
b1010 j
b0 B
b0 f
b0 g
0h
b0 i
b1001 E
b1001 Z
b1001 J
b1001 O
b100 )
b100 m
b100 v
b0 *
b0 q
b0 !"
b0 +
b0 G
b0 N
b0 Q
b0 T
b0 \
b0 b
b0 e
b0 }
#10
b0 @
b0 p
#12
1"
#13
b100 !
b100 6
b100 y
b1001 &"
#14
b1000 ,
b1000 x
b1000 (
b1000 o
b1000 w
b1000 z
#15
b0 -
b0 F
b0 M
b0 P
b0 S
b0 Y
b0 [
b0 a
b0 d
b0 u
b100 /
b100 n
b100 %"
b1 0
b1 l
b1 $"
b1 4
b1 k
b0 3
b0 s
b0 8
b0 ""
b1 2
b1 |
b110 5
b110000000010000000000000000 #
b110000000010000000000000000 %
b1001 +
b1001 G
b1001 N
b1001 Q
b1001 T
b1001 \
b1001 b
b1001 e
b1001 }
#16
b0 '
b0 K
b0 {
b100 ,
b100 x
b0 E
b0 Z
09
1=
0<
b1 j
1h
b1001 i
b1 X
b1001 W
b1 `
b1001 _
0"
#17
b1001 -
b1001 F
b1001 M
b1001 P
b1001 S
b1001 Y
b1001 [
b1001 a
b1001 d
b1001 u
b1001 .
b1001 r
b1001 t
b1100 ,
b1100 x
b1100 )
b1100 m
b1100 v
b1001 *
b1001 q
b1001 !"
#18
b1001 '
b1001 K
b1001 {
b1001 I
b1001 R
b1010 `
b0 _
b0 D
b0 ]
b0 ^
b1010 X
b0 W
b0 H
b0 U
b0 V
b1010 j
0h
b10000100 i
b10000100 B
b10000100 f
b100 g
b1001 E
b1001 Z
b11110111 @
b11110111 p
#19
b10010 J
b10010 O
#20
1"
#21
b1100 !
b1100 6
b1100 y
#22
b10000 (
b10000 o
b10000 w
b10000 z
#23
b1010 3
b1010 s
b10 8
b10 ""
b0 5
b10000000000001010 #
b10000000000001010 %
#24
b1010 -
b1010 F
b1010 M
b1010 P
b1010 S
b1010 Y
b1010 [
b1010 a
b1010 d
b1010 u
b10000 ,
b10000 x
19
0=
1<
b10100 )
b10100 m
b10100 v
0"
#25
b0 .
b0 r
b0 t
b1010 '
b1010 K
b1010 {
b1000010 B
b1000010 f
b1000010 g
b1011 j
0h
b1000010 i
b0 H
b0 U
b0 V
b1011 X
b0 W
b0 D
b0 ]
b0 ^
b1011 `
b0 _
b1011 C
b1011 c
b1000 I
b1000 R
b1010 E
b1010 Z
b0 *
b0 q
b0 !"
#26
b0 @
b0 p
b10011 J
b10011 O
#28
1"
#29
b10000 !
b10000 6
b10000 y
b1010 '"
#30
b10100 ,
b10100 x
b10100 (
b10100 o
b10100 w
b10100 z
#31
b0 -
b0 F
b0 M
b0 P
b0 S
b0 Y
b0 [
b0 a
b0 d
b0 u
b0 3
b0 s
b0 8
b0 ""
b1 7
b1 ~
b111 5
b111000000010000000100000000 #
b111000000010000000100000000 %
#32
b10011 '
b10011 K
b10011 {
b0 I
b0 R
b1001 C
b1001 c
b1 `
b1001 _
b1 X
b1001 W
b1 j
1h
b1001 i
b0 E
b0 Z
09
b1 1
b1 A
1:
0<
1?
b11000 )
b11000 m
b11000 v
0"
#33
b1010 '
b1010 K
b1010 {
b1010 J
b1010 O
b1001 *
b1001 q
b1001 !"
b1010 +
b1010 G
b1010 N
b1010 Q
b1010 T
b1010 \
b1010 b
b1010 e
b1010 }
#34
b11110111 -
b11110111 F
b11110111 M
b11110111 P
b11110111 S
b11110111 Y
b11110111 [
b11110111 a
b11110111 d
b11110111 u
b11110111 .
b11110111 r
b11110111 t
b11110111 @
b11110111 p
0h
b1010 i
b1010 W
b1010 _
b1010 C
b1010 c
#35
b10 I
b10 R
b11111111 C
b11111111 c
b11111000 `
b0 _
b0 D
b0 ]
b0 ^
b11111000 X
b0 W
b0 H
b0 U
b0 V
b11111000 j
0h
b10100 i
b10100 B
b10100 f
b10100 g
b11110111 E
b11110111 Z
#36
b1 '
b1 K
b1 {
b1 J
b1 O
1"
#37
b10100 !
b10100 6
b10100 y
#38
b11000 ,
b11000 x
b11000 (
b11000 o
b11000 w
b11000 z
#39
b1000 /
b1000 n
b1000 %"
b10 0
b10 l
b10 $"
b10 4
b10 k
b1001 3
b1001 s
b1 8
b1 ""
b0 7
b0 ~
b10 2
b10 |
b0 5
b100000000000001001 #
b100000000000001001 %
#40
b1001 -
b1001 F
b1001 M
b1001 P
b1001 S
b1001 Y
b1001 [
b1001 a
b1001 d
b1001 u
b1001 .
b1001 r
b1001 t
b11110111 '
b11110111 K
b11110111 {
19
b0 1
b0 A
0:
1<
0?
0"
#41
b1010 .
b1010 r
b1010 t
b1001 '
b1001 K
b1001 {
b10000100 B
b10000100 f
b100 g
b1010 j
0h
b10000100 i
b0 H
b0 U
b0 V
b1010 X
b0 W
b0 D
b0 ]
b0 ^
b1010 `
b0 _
b1001 C
b1001 c
b1001 I
b1001 R
b1001 E
b1001 Z
b100000 )
b100000 m
b100000 v
b1010 *
b1010 q
b1010 !"
b1001 +
b1001 G
b1001 N
b1001 Q
b1001 T
b1001 \
b1001 b
b1001 e
b1001 }
#42
b11110110 @
b11110110 p
b10010 J
b10010 O
#44
1"
#45
b11000 !
b11000 6
b11000 y
b1001 ("
#46
b11100 ,
b11100 x
b11100 (
b11100 o
b11100 w
b11100 z
#47
b0 -
b0 F
b0 M
b0 P
b0 S
b0 Y
b0 [
b0 a
b0 d
b0 u
b100 /
b100 n
b100 %"
b1 0
b1 l
b1 $"
b1 4
b1 k
b0 3
b0 s
b0 8
b0 ""
b10 7
b10 ~
b1 2
b1 |
b111 5
b111000000010000001000000000 #
b111000000010000001000000000 %
#48
b11110110 -
b11110110 F
b11110110 M
b11110110 P
b11110110 S
b11110110 Y
b11110110 [
b11110110 a
b11110110 d
b11110110 u
b11110110 .
b11110110 r
b11110110 t
b10010 '
b10010 K
b10010 {
b0 I
b0 R
b1 `
b1001 _
b1 X
b1001 W
b1 j
1h
b1001 i
b0 E
b0 Z
09
b1 1
b1 A
1:
0<
1?
0"
#49
b11111111 '
b11111111 K
b11111111 {
b100100 B
b100100 f
b100100 g
b11110111 j
0h
b100100 i
b11110111 X
b0 W
b0 H
b0 U
b0 V
b11110111 `
b0 _
b0 D
b0 ]
b0 ^
b11111111 C
b11111111 c
b11110110 E
b11110110 Z
b11111111 J
b11111111 O
b1001 *
b1001 q
b1001 !"
#50
b11110111 -
b11110111 F
b11110111 M
b11110111 P
b11110111 S
b11110111 Y
b11110111 [
b11110111 a
b11110111 d
b11110111 u
b11110111 .
b11110111 r
b11110111 t
b11110111 @
b11110111 p
#51
b1 I
b1 R
b0 D
b0 ]
b0 ^
b11111000 `
b0 _
b0 H
b0 U
b0 V
b11111000 X
b0 W
b10010 B
b10010 f
b10010 g
b11111000 j
0h
b10010 i
b11110111 E
b11110111 Z
#52
b100000 ,
b100000 x
1&
b0 '
b0 K
b0 {
b0 J
b0 O
1"
#53
b100000 !
b100000 6
b100000 y
#54
b100100 (
b100100 o
b100100 w
b100100 z
#55
b1100 /
b1100 n
b1100 %"
b11 0
b11 l
b11 $"
b11 4
b11 k
b1 3
b1 s
b1 8
b1 ""
b0 7
b0 ~
b11 2
b11 |
b10 5
b10000000110000000000000001 #
b10000000110000000000000001 %
#56
b1001 -
b1001 F
b1001 M
b1001 P
b1001 S
b1001 Y
b1001 [
b1001 a
b1001 d
b1001 u
b1001 .
b1001 r
b1001 t
b100100 ,
b100100 x
19
0:
0?
0"
#57
b1010 -
b1010 F
b1010 M
b1010 P
b1010 S
b1010 Y
b1010 [
b1010 a
b1010 d
b1010 u
b1010 .
b1010 r
b1010 t
b10000100 B
b10000100 f
b100 g
b1010 j
0h
b10000100 i
b0 H
b0 U
b0 V
b1010 X
b0 W
b0 D
b0 ]
b0 ^
b1010 `
b0 _
b1001 C
b1001 c
b1001 I
b1001 R
b1001 E
b1001 Z
b110000 )
b110000 m
b110000 v
b1010 *
b1010 q
b1010 !"
#58
0&
b10011 '
b10011 K
b10011 {
b1000 I
b1000 R
b1011 C
b1011 c
b0 D
b0 ]
b0 ^
b1011 `
b0 _
b0 H
b0 U
b0 V
b1011 X
b0 W
b1000010 B
b1000010 f
b1000010 g
b1011 j
0h
b1000010 i
b1010 E
b1010 Z
b11110110 @
b11110110 p
b10011 J
b10011 O
#60
1"
#61
b100100 !
b100100 6
b100100 y
b10011 )"
#62
b101000 ,
b101000 x
b101000 (
b101000 o
b101000 w
b101000 z
#63
b10000 /
b10000 n
b10000 %"
b100 0
b100 l
b100 $"
b100 4
b100 k
b10 3
b10 s
b10 8
b10 ""
b1 7
b1 ~
b100 2
b100 |
b1001 5
b1001000001000000000100000010 #
b1001000001000000000100000010 %
#64
b10 -
b10 F
b10 M
b10 P
b10 S
b10 Y
b10 [
b10 a
b10 d
b10 u
b0 '
b0 K
b0 {
1>
b100 1
b100 A
1<
0"
#65
b1001 .
b1001 r
b1001 t
b10 '
b10 K
b10 {
0h
b10000010 B
b10000010 f
b10 g
b11 j
b10000010 i
b10 H
b10 U
b10 V
b11 X
b10 W
b10 D
b10 ]
b10 ^
b11 `
b10 _
b1010 C
b1010 c
b10 I
b10 R
b10 E
b10 Z
b111000 )
b111000 m
b111000 v
b1001 *
b1001 q
b1001 !"
b1010 +
b1010 G
b1010 N
b1010 Q
b1010 T
b1010 \
b1010 b
b1010 e
b1010 }
#66
b11110111 @
b11110111 p
b1100 J
b1100 O
#68
1"
#69
b101000 !
b101000 6
b101000 y
b10 *"
#70
b101100 ,
b101100 x
b101100 (
b101100 o
b101100 w
b101100 z
#71
b10100 /
b10100 n
b10100 %"
b101 0
b101 l
b101 $"
b101 4
b101 k
b10 7
b10 ~
b101 2
b101 |
b1010 5
b1010000001010000001000000010 #
b1010000001010000001000000010 %
#72
b101 1
b101 A
0"
#73
b1000000 )
b1000000 m
b1000000 v
b1001 +
b1001 G
b1001 N
b1001 Q
b1001 T
b1001 \
b1001 b
b1001 e
b1001 }
#74
b0 I
b0 R
b1011 C
b1011 c
b10 D
b10 ]
b10 ^
b11 `
b10 _
b10 H
b10 U
b10 V
b11 X
b10 W
b1000010 B
b1000010 f
b1000010 g
b11 j
0h
b1000010 i
#75
b1011 J
b1011 O
#76
1"
#77
b101100 !
b101100 6
b101100 y
b10 +"
#78
b110000 ,
b110000 x
b110000 (
b110000 o
b110000 w
b110000 z
#79
b11 -
b11 F
b11 M
b11 P
b11 S
b11 Y
b11 [
b11 a
b11 d
b11 u
b100 /
b100 n
b100 %"
b1 0
b1 l
b1 $"
b1 4
b1 k
b11 3
b11 s
b11 8
b11 ""
b100 7
b100 ~
b1 2
b1 |
b1011 5
b1011000000010000010000000011 #
b1011000000010000010000000011 %
#80
b11110111 -
b11110111 F
b11110111 M
b11110111 P
b11110111 S
b11110111 Y
b11110111 [
b11110111 a
b11110111 d
b11110111 u
b11110111 .
b11110111 r
b11110111 t
b1011 '
b1011 K
b1011 {
b1000000 ,
b1000000 x
b100001 B
b100001 f
b100001 g
b100 j
1h
b100001 i
b1 H
b1 U
b1 V
b100 X
b1 W
b1 D
b1 ]
b1 ^
b100 `
b1 _
b1 I
b1 R
b11 E
b11 Z
09
b1 1
b1 A
1;
0<
1?
0"
#81
b11111001 '
b11111001 K
b11111001 {
b110100 ,
b110100 x
b10 I
b10 R
b11110111 C
b11110111 c
b0 D
b0 ]
b0 ^
b11111000 `
b0 _
b0 H
b0 U
b0 V
b11111000 X
b0 W
b100 B
b100 f
b100 g
b11111000 j
0h
b100 i
b11110111 E
b11110111 Z
b11111001 J
b11111001 O
b110100 )
b110100 m
b110100 v
b10011 *
b10011 q
b10011 !"
b10 +
b10 G
b10 N
b10 Q
b10 T
b10 \
b10 b
b10 e
b10 }
#82
b11101101 -
b11101101 F
b11101101 M
b11101101 P
b11101101 S
b11101101 Y
b11101101 [
b11101101 a
b11101101 d
b11101101 u
b11101101 .
b11101101 r
b11101101 t
b11101101 @
b11101101 p
#83
0h
b10000 B
b10000 f
b10000 g
b11101110 j
b10000 i
b0 H
b0 U
b0 V
b11101110 X
b0 W
b0 D
b0 ]
b0 ^
b11101110 `
b0 _
b11101111 C
b11101111 c
b0 I
b0 R
b11101101 E
b11101101 Z
#84
b11101111 '
b11101111 K
b11101111 {
b11101111 J
b11101111 O
1"
#85
b110100 !
b110100 6
b110100 y
#86
b111000 (
b111000 o
b111000 w
b111000 z
#87
b11100 /
b11100 n
b11100 %"
b111 0
b111 l
b111 $"
b111 4
b111 k
b1000 3
b1000 s
b0 8
b0 ""
b0 7
b0 ~
b111 2
b111 |
b0 5
b1110000000000001000 #
b1110000000000001000 %
#88
b1000 -
b1000 F
b1000 M
b1000 P
b1000 S
b1000 Y
b1000 [
b1000 a
b1000 d
b1000 u
b10011 .
b10011 r
b10011 t
b11101101 '
b11101101 K
b11101101 {
b111000 ,
b111000 x
19
b0 1
b0 A
0;
1<
0?
0"
#89
b1001 .
b1001 r
b1001 t
b1000 '
b1000 K
b1000 {
b1000 I
b1000 R
b1001 C
b1001 c
b0 D
b0 ]
b0 ^
b1001 `
b0 _
b0 H
b0 U
b0 V
b1001 X
b0 W
b1001 B
b1001 f
b1001 g
b1001 j
1h
b1001 i
b1000 E
b1000 Z
b1010100 )
b1010100 m
b1010100 v
b1001 *
b1001 q
b1001 !"
b1001 +
b1001 G
b1001 N
b1001 Q
b1001 T
b1001 \
b1001 b
b1001 e
b1001 }
#90
b11110111 @
b11110111 p
b10001 J
b10001 O
#92
1"
#93
b111000 !
b111000 6
b111000 y
b1000 -"
#94
b111100 ,
b111100 x
b111100 (
b111100 o
b111100 w
b111100 z
#95
b11 -
b11 F
b11 M
b11 P
b11 S
b11 Y
b11 [
b11 a
b11 d
b11 u
b11 3
b11 s
b11 8
b11 ""
b10 7
b10 ~
b1100 5
b1100000001110000001000000011 #
b1100000001110000001000000011 %
#96
b100001 '
b100001 K
b100001 {
1h
b100001 i
b100001 B
b100001 f
b100001 g
b100 j
b1 H
b1 U
b1 V
b100 X
b1 W
b1 D
b1 ]
b1 ^
b100 `
b1 _
b1011 C
b1011 c
b1 I
b1 R
b11 E
b11 Z
b110 1
b110 A
b1011000 )
b1011000 m
b1011000 v
0"
#97
b10011 .
b10011 r
b10011 t
b1100 J
b1100 O
b10011 *
b10011 q
b10011 !"
#98
b11101101 @
b11101101 p
#100
1"
#101
b111100 !
b111100 6
b111100 y
b100001 -"
#102
b1000000 ,
b1000000 x
b1000000 (
b1000000 o
b1000000 w
b1000000 z
#103
bx -
bx F
bx M
bx P
bx S
bx Y
bx [
bx a
bx d
bx u
b0xxxxxxxx00 /
b0xxxxxxxx00 n
b0xxxxxxxx00 %"
b0xxxxxxxx 0
b0xxxxxxxx l
b0xxxxxxxx $"
bx 4
bx k
bx 3
bx s
bx 8
bx ""
bx 7
bx ~
bx 2
bx |
bx 5
bx #
bx %
#104
b0x00x I
b0x00x R
bx1xx1 C
bx1xx1 c
b1 `
b1001 _
b1 X
b1001 W
b1 j
b1001 i
bx E
bx Z
0"
#105
bx .
bx r
bx t
bx J
bx O
bx )
bx m
bx v
bx *
bx q
bx !"
bx +
bx G
bx N
bx Q
bx T
bx \
bx b
bx e
bx }
#106
bx @
bx p
xh
bx i
bx W
bx _
bx C
bx c
bx I
bx R
#108
1"
#109
b1000000 !
b1000000 6
b1000000 y
#110
b1000100 ,
b1000100 x
b1000100 (
b1000100 o
b1000100 w
b1000100 z
#112
0"
#116
1"
#117
b1000100 !
b1000100 6
b1000100 y
#118
b1001000 ,
b1001000 x
b1001000 (
b1001000 o
b1001000 w
b1001000 z
#120
0"
#124
1"
#125
b1001000 !
b1001000 6
b1001000 y
#126
b1001100 ,
b1001100 x
b1001100 (
b1001100 o
b1001100 w
b1001100 z
#128
0"
#132
1"
#133
b1001100 !
b1001100 6
b1001100 y
#134
b1010000 ,
b1010000 x
b1010000 (
b1010000 o
b1010000 w
b1010000 z
#136
0"
#140
1"
#141
b1010000 !
b1010000 6
b1010000 y
#142
b1010100 ,
b1010100 x
b1010100 (
b1010100 o
b1010100 w
b1010100 z
#144
0"
#148
1"
#149
b1010100 !
b1010100 6
b1010100 y
#150
b1011000 ,
b1011000 x
b1011000 (
b1011000 o
b1011000 w
b1011000 z
#152
0"
#156
1"
#157
b1011000 !
b1011000 6
b1011000 y
#158
b1011100 ,
b1011100 x
b1011100 (
b1011100 o
b1011100 w
b1011100 z
#160
0"
#164
1"
#165
b1011100 !
b1011100 6
b1011100 y
#166
b1100000 ,
b1100000 x
b1100000 (
b1100000 o
b1100000 w
b1100000 z
#168
0"
#172
1"
#173
b1100000 !
b1100000 6
b1100000 y
#174
b1100100 ,
b1100100 x
b1100100 (
b1100100 o
b1100100 w
b1100100 z
#176
0"
#180
1"
#181
b1100100 !
b1100100 6
b1100100 y
#182
b1101000 ,
b1101000 x
b1101000 (
b1101000 o
b1101000 w
b1101000 z
#184
0"
#188
1"
#189
b1101000 !
b1101000 6
b1101000 y
#190
b1101100 ,
b1101100 x
b1101100 (
b1101100 o
b1101100 w
b1101100 z
#192
0"
#196
1"
#197
b1101100 !
b1101100 6
b1101100 y
#198
b1110000 ,
b1110000 x
b1110000 (
b1110000 o
b1110000 w
b1110000 z
#200
0"
#204
1"
#205
b1110000 !
b1110000 6
b1110000 y
#206
b1110100 ,
b1110100 x
b1110100 (
b1110100 o
b1110100 w
b1110100 z
#208
0"
#212
1"
#213
b1110100 !
b1110100 6
b1110100 y
#214
b1111000 ,
b1111000 x
b1111000 (
b1111000 o
b1111000 w
b1111000 z
#216
0"
#220
1"
#221
b1111000 !
b1111000 6
b1111000 y
#222
b1111100 ,
b1111100 x
b1111100 (
b1111100 o
b1111100 w
b1111100 z
#224
0"
#228
1"
#229
b1111100 !
b1111100 6
b1111100 y
#230
b10000000 ,
b10000000 x
b10000000 (
b10000000 o
b10000000 w
b10000000 z
#232
0"
#236
1"
#237
b10000000 !
b10000000 6
b10000000 y
#238
b10000100 ,
b10000100 x
b10000100 (
b10000100 o
b10000100 w
b10000100 z
#240
0"
#244
1"
#245
b10000100 !
b10000100 6
b10000100 y
#246
b10001000 ,
b10001000 x
b10001000 (
b10001000 o
b10001000 w
b10001000 z
#248
0"
#252
1"
#253
b10001000 !
b10001000 6
b10001000 y
#254
b10001100 ,
b10001100 x
b10001100 (
b10001100 o
b10001100 w
b10001100 z
#256
0"
#260
1"
#261
b10001100 !
b10001100 6
b10001100 y
#262
b10010000 ,
b10010000 x
b10010000 (
b10010000 o
b10010000 w
b10010000 z
#264
0"
#268
1"
#269
b10010000 !
b10010000 6
b10010000 y
#270
b10010100 ,
b10010100 x
b10010100 (
b10010100 o
b10010100 w
b10010100 z
#272
0"
#276
1"
#277
b10010100 !
b10010100 6
b10010100 y
#278
b10011000 ,
b10011000 x
b10011000 (
b10011000 o
b10011000 w
b10011000 z
#280
0"
#284
1"
#285
b10011000 !
b10011000 6
b10011000 y
#286
b10011100 ,
b10011100 x
b10011100 (
b10011100 o
b10011100 w
b10011100 z
#288
0"
#292
1"
#293
b10011100 !
b10011100 6
b10011100 y
#294
b10100000 ,
b10100000 x
b10100000 (
b10100000 o
b10100000 w
b10100000 z
#296
0"
#300
1"
#301
b10100000 !
b10100000 6
b10100000 y
#302
b10100100 ,
b10100100 x
b10100100 (
b10100100 o
b10100100 w
b10100100 z
#304
0"
#308
1"
#309
b10100100 !
b10100100 6
b10100100 y
#310
b10101000 ,
b10101000 x
b10101000 (
b10101000 o
b10101000 w
b10101000 z
#312
0"
#316
1"
#317
b10101000 !
b10101000 6
b10101000 y
#318
b10101100 ,
b10101100 x
b10101100 (
b10101100 o
b10101100 w
b10101100 z
#320
0"
#324
1"
#325
b10101100 !
b10101100 6
b10101100 y
#326
b10110000 ,
b10110000 x
b10110000 (
b10110000 o
b10110000 w
b10110000 z
#328
0"
#332
1"
#333
b10110000 !
b10110000 6
b10110000 y
#334
b10110100 ,
b10110100 x
b10110100 (
b10110100 o
b10110100 w
b10110100 z
#336
0"
#340
1"
#341
b10110100 !
b10110100 6
b10110100 y
#342
b10111000 ,
b10111000 x
b10111000 (
b10111000 o
b10111000 w
b10111000 z
#344
0"
#348
1"
#349
b10111000 !
b10111000 6
b10111000 y
#350
b10111100 ,
b10111100 x
b10111100 (
b10111100 o
b10111100 w
b10111100 z
#352
0"
#356
1"
#357
b10111100 !
b10111100 6
b10111100 y
#358
b11000000 ,
b11000000 x
b11000000 (
b11000000 o
b11000000 w
b11000000 z
#360
0"
#364
1"
#365
b11000000 !
b11000000 6
b11000000 y
#366
b11000100 ,
b11000100 x
b11000100 (
b11000100 o
b11000100 w
b11000100 z
#368
0"
#372
1"
#373
b11000100 !
b11000100 6
b11000100 y
#374
b11001000 ,
b11001000 x
b11001000 (
b11001000 o
b11001000 w
b11001000 z
#376
0"
#380
1"
#381
b11001000 !
b11001000 6
b11001000 y
#382
b11001100 ,
b11001100 x
b11001100 (
b11001100 o
b11001100 w
b11001100 z
#384
0"
#388
1"
#389
b11001100 !
b11001100 6
b11001100 y
#390
b11010000 ,
b11010000 x
b11010000 (
b11010000 o
b11010000 w
b11010000 z
#392
0"
#396
1"
#397
b11010000 !
b11010000 6
b11010000 y
#398
b11010100 ,
b11010100 x
b11010100 (
b11010100 o
b11010100 w
b11010100 z
#400
0"
#404
1"
#405
b11010100 !
b11010100 6
b11010100 y
#406
b11011000 ,
b11011000 x
b11011000 (
b11011000 o
b11011000 w
b11011000 z
#408
0"
#412
1"
#413
b11011000 !
b11011000 6
b11011000 y
#414
b11011100 ,
b11011100 x
b11011100 (
b11011100 o
b11011100 w
b11011100 z
#416
0"
#420
1"
#421
b11011100 !
b11011100 6
b11011100 y
#422
b11100000 ,
b11100000 x
b11100000 (
b11100000 o
b11100000 w
b11100000 z
#424
0"
#428
1"
#429
b11100000 !
b11100000 6
b11100000 y
#430
b11100100 ,
b11100100 x
b11100100 (
b11100100 o
b11100100 w
b11100100 z
#432
0"
#436
1"
#437
b11100100 !
b11100100 6
b11100100 y
#438
b11101000 ,
b11101000 x
b11101000 (
b11101000 o
b11101000 w
b11101000 z
#440
0"
#444
1"
#445
b11101000 !
b11101000 6
b11101000 y
#446
b11101100 ,
b11101100 x
b11101100 (
b11101100 o
b11101100 w
b11101100 z
#448
0"
#452
1"
#453
b11101100 !
b11101100 6
b11101100 y
#454
b11110000 ,
b11110000 x
b11110000 (
b11110000 o
b11110000 w
b11110000 z
#456
0"
#460
1"
#461
b11110000 !
b11110000 6
b11110000 y
#462
b11110100 ,
b11110100 x
b11110100 (
b11110100 o
b11110100 w
b11110100 z
#464
0"
#468
1"
#469
b11110100 !
b11110100 6
b11110100 y
#470
b11111000 ,
b11111000 x
b11111000 (
b11111000 o
b11111000 w
b11111000 z
#472
0"
#476
1"
#477
b11111000 !
b11111000 6
b11111000 y
#478
b11111100 ,
b11111100 x
b11111100 (
b11111100 o
b11111100 w
b11111100 z
#480
0"
#484
1"
#485
b11111100 !
b11111100 6
b11111100 y
#486
b100000000 ,
b100000000 x
b100000000 (
b100000000 o
b100000000 w
b100000000 z
#488
0"
#492
1"
#493
b100000000 !
b100000000 6
b100000000 y
#494
b100000100 ,
b100000100 x
b100000100 (
b100000100 o
b100000100 w
b100000100 z
#496
0"
#500
1"
#501
b100000100 !
b100000100 6
b100000100 y
#502
b100001000 ,
b100001000 x
b100001000 (
b100001000 o
b100001000 w
b100001000 z
#504
0"
#506
